<event_sessions xmlns="http://schemas.microsoft.com/sqlserver/2008/07/extendedeventconfig">
  <event_session name="query_detail_final_fix_pred" maxMemory="4" eventRetentionMode="allowSingleEventLoss" trackCausality="true" dispatchLatency="30" maxEventSize="0" memoryPartitionMode="none">
    <templateCategory>
      <!-- _locID_text="templateCategory" _locComment = "" -->Выполнение запроса</templateCategory>
    <templateName>
      <!-- _locID_text = "templateName" _locComment = "" -->Отслеживание сведений о запросах</templateName>
    <templateDescription>
      <!-- _locID_text = "templateDescription" _locComment = "" -->Этот шаблон собирает подробные сведения об инструкциях и ошибках. Он позволяет отслеживать каждую инструкцию, выполняющуюся в системе в результате пакетов запросов или хранимых процедур, и прослеживать ошибки до вызвавшей их инструкции. Он также собирает хэш запроса и хэш плана запроса для каждой отслеживаемой инструкции. В этом сеансе собираются все события инструкций, и поэтому объем сбора может быть очень большим. Чтобы сократить объем сбора, рекомендуется использовать шаблон "Выборка сведений о запросах", в который уже входит фильтр.</templateDescription>
    <event package="sqlserver" name="error_reported">
      <action package="sqlserver" name="client_app_name"/>
      <action package="sqlserver" name="database_id"/>
      <action package="sqlserver" name="query_hash"/>
      <action package="sqlserver" name="session_id"/>
      <predicate>
        <and>
          <leaf>
            <comparator name="greater_than_uint64" package="package0"></comparator>
            <global name="database_id" package="sqlserver"></global>
            <value>4</value>
          </leaf>
          <leaf>
            <comparator name="equal_boolean" package="package0"></comparator>
            <global name="is_system" package="sqlserver"></global>
            <value>false</value>
          </leaf>
        </and>
      </predicate>
    </event>
    <event package="sqlserver" name="module_end">
      <action package="sqlserver" name="client_app_name"/>
      <action package="sqlserver" name="database_id"/>
      <action package="sqlserver" name="query_hash"/>
      <action package="sqlserver" name="session_id"/>
      <parameter name="collect_statement" value="1"/>
      <predicate>
        <and>
          <leaf>
            <comparator name="greater_than_uint64" package="package0"></comparator>
            <global name="database_id" package="sqlserver"></global>
            <value>4</value>
          </leaf>
          <leaf>
            <comparator name="equal_boolean" package="package0"></comparator>
            <global name="is_system" package="sqlserver"></global>
            <value>false</value>
          </leaf>
        </and>
      </predicate>
    </event>
    <event package="sqlserver" name="rpc_completed">
      <action package="sqlserver" name="client_app_name"/>
      <action package="sqlserver" name="database_id"/>
      <action package="sqlserver" name="query_hash"/>
      <action package="sqlserver" name="session_id"/>
      <predicate>
        <and>
          <leaf>
            <comparator name="greater_than_uint64" package="package0"></comparator>
            <global name="database_id" package="sqlserver"></global>
            <value>4</value>
          </leaf>
          <leaf>
            <comparator name="equal_boolean" package="package0"></comparator>
            <global name="is_system" package="sqlserver"></global>
            <value>false</value>
          </leaf>
        </and>
      </predicate>
    </event>
    <event package="sqlserver" name="sp_statement_completed">
      <action package="sqlserver" name="client_app_name"/>
      <action package="sqlserver" name="database_id"/>
      <action package="sqlserver" name="query_hash"/>
      <action package="sqlserver" name="query_plan_hash"/>
      <action package="sqlserver" name="session_id"/>
      <parameter name="collect_object_name" value="1"/>
      <predicate>
        <and>
          <leaf>
            <comparator name="greater_than_uint64" package="package0"></comparator>
            <global name="database_id" package="sqlserver"></global>
            <value>4</value>
          </leaf>
          <leaf>
            <comparator name="equal_boolean" package="package0"></comparator>
            <global name="is_system" package="sqlserver"></global>
            <value>false</value>
          </leaf>
        </and>
      </predicate>
    </event>
    <event package="sqlserver" name="sql_batch_completed">
      <action package="sqlserver" name="client_app_name"/>
      <action package="sqlserver" name="database_id"/>
      <action package="sqlserver" name="query_hash"/>
      <action package="sqlserver" name="session_id"/>
      <predicate>
        <and>
          <leaf>
            <comparator name="greater_than_uint64" package="package0"></comparator>
            <global name="database_id" package="sqlserver"></global>
            <value>4</value>
          </leaf>
          <leaf>
            <comparator name="equal_boolean" package="package0"></comparator>
            <global name="is_system" package="sqlserver"></global>
            <value>false</value>
          </leaf>
        </and>
      </predicate>
    </event>
    <event package="sqlserver" name="sql_statement_completed">
      <action package="sqlserver" name="client_app_name"/>
      <action package="sqlserver" name="database_id"/>
      <action package="sqlserver" name="query_hash"/>
      <action package="sqlserver" name="query_plan_hash"/>
      <action package="sqlserver" name="session_id"/>
      <predicate>
        <and>
          <leaf>
            <comparator name="greater_than_uint64" package="package0"></comparator>
            <global name="database_id" package="sqlserver"></global>
            <value>4</value>
          </leaf>
          <leaf>
            <comparator name="equal_boolean" package="package0"></comparator>
            <global name="is_system" package="sqlserver"></global>
            <value>false</value>
          </leaf>
        </and>
      </predicate>
    </event>
    <target package="package0" name="ring_buffer"/>
  </event_session>
</event_sessions>
